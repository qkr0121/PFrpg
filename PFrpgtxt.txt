singleton의 instance : 하나의 인스턴스만 필요로 하는 경우 사용

GameManager 

- Awake() : DontDestroyOnLoad() 로 싱글톤 객체 유지
-> 유일성 검사 : 처음부터 GameManager가 2개 일 때를 검사 하는 것이 아니라
    Scene 변경 등 기존 GameManager 외의 다른 GameManager 가 생겼을 시 삭제하는 것
- SceneLoadStarted(), SceneChanged() : 씬 시작, 변경시 실행내용
- List<ManagerClassBase> _ManagerClasses 로 매니저 클래스들을 한꺼번에 관리한다.(RegisterManagerClass<T>() 로 등록할 수 있다.)

ManagerClassBase
- GameManager를 제외한 매니저 클래스들이 상속받아야 할 클래스
- instance와 SceneLoad, SceneChanage 등을 가진다.


GameManager에서 다른 ManagerClass 관리 코드 작성 중